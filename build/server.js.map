{"version":3,"sources":["webpack:///server.js","webpack:///webpack/bootstrap a7d8489fbfa8dd63f6c5","webpack:///./src/server/server.jsx","webpack:///external \"http\"","webpack:///external \"http-proxy\"","webpack:///external \"express\"","webpack:///external \"helmet\"","webpack:///external \"morgan\"","webpack:///external \"serve-favicon\"","webpack:///./src/config/environment.js","webpack:///external \"dotenv\"","webpack:///external \"require-environment-variables\"","webpack:///./~/react-s3-uploader/s3router.js","webpack:///./~/react-s3-uploader/~/node-uuid/uuid.js","webpack:///external \"crypto\"","webpack:///external \"aws-sdk\""],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_http","_http2","_httpProxy","_httpProxy2","_express","_express2","_helmet","_helmet2","_morgan","_morgan2","_serveFavicon","_serveFavicon2","apiServerPort","process","env","API_SERVER_PORT","apiProxy","createProxyServer","apiServer","ourPort","MAIN_SERVER_PORT","app","use","static","all","req","res","web","target","bucket","headers","Access-Control-Allow-Origin","server","createServer","port","PORT","listen","on","error","console","log","require","_dotenv","_requireEnvironmentVariables","_requireEnvironmentVariables2","checkTrailingSlash","path","length","S3Router","options","tempRedirect","params","Bucket","S3_BUCKET","Key","getFileKeyDir","s3","aws","S3","s3Options","getSignedUrl","err","url","redirect","Error","region","signatureVersion","router","express","Router","get","filename","uuid","v4","query","objectName","mimeType","contentType","fileKey","set","Expires","ContentType","ACL","data","send","json","signedUrl","publicUrl","__WEBPACK_AMD_DEFINE_RESULT__","_window","setupBrowser","_crypto","crypto","msCrypto","_rng","getRandomValues","_rnds8","Uint8Array","_whatwgRNG","e","_rnds","Array","_mathRNG","r","i","Math","random","warn","setupNode","_rb","randomBytes","_nodeRNG","parse","s","buf","offset","ii","toLowerCase","replace","oct","_hexToByte","unparse","bth","_byteToHex","v1","b","clockseq","_clockseq","msecs","Date","getTime","nsecs","_lastNSecs","dt","_lastMSecs","tl","tmh","node","_nodeId","n","BufferClass","rnds","rng","Buffer","toString","substr","_seedBytes","undefined","window"],"mappings":"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","file":"server.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _http = __webpack_require__(1);\n\t\n\tvar _http2 = _interopRequireDefault(_http);\n\t\n\tvar _httpProxy = __webpack_require__(2);\n\t\n\tvar _httpProxy2 = _interopRequireDefault(_httpProxy);\n\t\n\tvar _express = __webpack_require__(3);\n\t\n\tvar _express2 = _interopRequireDefault(_express);\n\t\n\tvar _helmet = __webpack_require__(4);\n\t\n\tvar _helmet2 = _interopRequireDefault(_helmet);\n\t\n\tvar _morgan = __webpack_require__(5);\n\t\n\tvar _morgan2 = _interopRequireDefault(_morgan);\n\t\n\tvar _serveFavicon = __webpack_require__(6);\n\t\n\tvar _serveFavicon2 = _interopRequireDefault(_serveFavicon);\n\t\n\t__webpack_require__(7);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/* Set up proxy routes to the api server */\n\tvar apiServerPort = process.env.API_SERVER_PORT;\n\t\n\t// import React from 'react';\n\t// import { renderToString } from 'react-dom/server';\n\t// import { RoutingContext, match } from 'react-router';\n\t/* Routes */\n\t// import routes from '../shared/routes';\n\t/* Configurations */\n\t\n\t/* Core imports */\n\t\n\tif (!apiServerPort) {\n\t  apiServerPort = 3006;\n\t}\n\tvar apiProxy = _httpProxy2.default.createProxyServer();\n\tvar apiServer = 'http://localhost:' + apiServerPort;\n\t\n\tvar ourPort = process.env.MAIN_SERVER_PORT;\n\tif (!ourPort) {\n\t  ourPort = 3001;\n\t}\n\t\n\tvar app = (0, _express2.default)();\n\t\n\tapp.use((0, _serveFavicon2.default)('build/public/assets/favicon.ico'));\n\t\n\t/* Configure middleware */\n\t/* Helmet - help secure Express/Connect apps with various HTTP headers */\n\tapp.use((0, _helmet2.default)());\n\tapp.use((0, _morgan2.default)('combined'));\n\t\n\t/* if (process.env.NODE_ENV && process.env.NODE_ENV === 'production') {\n\t  app.get('*.js', (req, res, next) => {\n\t    req.url = `${req.url}.gz`; // eslint-disable-line no-param-reassign\n\t    res.set('Content-Encoding', 'gzip');\n\t    next();\n\t  });\n\t}\n\t*/\n\tapp.use(_express2.default.static('build/public'));\n\t\n\t/* Proxy all api calls through to the api server */\n\tapp.all('/api/*', function allapiTraffic(req, res) {\n\t  apiProxy.web(req, res, { target: apiServer });\n\t});\n\t\n\tapp.use('/s3', __webpack_require__(10)({\n\t  bucket: 'socialnotsocial',\n\t  headers: { 'Access-Control-Allow-Origin': '*' } }));\n\t\n\t/*\n\tapp.use((req, res) => {\n\t  match({ routes, location: req.url }, (err, redirectLocation, renderProps) => {\n\t    if (err) {\n\t      console.error(err);\n\t      return res.status(500).end('Internal server error');\n\t    }\n\t    if (!renderProps) return res.status(404).end('Not found.');\n\t\n\t    const InitialComponent = (\n\t      <RoutingContext {...renderProps} />\n\t    );\n\t    const componentHTML = renderToString(InitialComponent);\n\t    const HTML = `\n\t    <!DOCTYPE html>\n\t    <html>\n\t      <head>\n\t        <meta charset=\"utf-8\">\n\t        <title>Isomorphic Redux Demo</title>\n\t      </head>\n\t      <body>\n\t        <div id=\"react-view\">${componentHTML}</div>\n\t        <script type=\"application/javascript\" src=\"/bundle.js\"></script>\n\t      </body>\n\t  </html>\n\t`;\n\t    res.end(HTML);\n\t  });\n\t});\n\t*/\n\t\n\tvar server = _http2.default.createServer(app);\n\tvar port = process.env.PORT || ourPort;\n\tserver.listen(port);\n\tserver.on('listening', function reportOnListen(error) {\n\t  if (error) {\n\t    console.log('Main Server ERROR on startup: ' + error);\n\t  } else {\n\t    console.log('Main Server listening on http://localhost:' + port + '.');\n\t  }\n\t});\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"http\");\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"http-proxy\");\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"express\");\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"helmet\");\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"morgan\");\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"serve-favicon\");\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _dotenv = __webpack_require__(8);\n\t\n\tvar _dotenv2 = _interopRequireDefault(_dotenv);\n\t\n\tvar _requireEnvironmentVariables = __webpack_require__(9);\n\t\n\tvar _requireEnvironmentVariables2 = _interopRequireDefault(_requireEnvironmentVariables);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/* 'As early as possible in your application, require and configure dotenv.'\n\t *   - https://www.npmjs.com/package/dotenv\n\t *\n\t * However, we aren't going to load these in production as it could lead to sloppy deploys.\n\t */\n\tif (false) {\n\t  console.log('Environment: ' + process.env.NODE_ENV + ' - loading DEV environment vars.');\n\t  _dotenv2.default.load();\n\t} else if (false) {\n\t  console.log('Environment: loading TEST environment vars.');\n\t  _dotenv2.default.load({ path: './envTest' });\n\t} else {\n\t  console.log('Environment: did NOT load environment variables from .env for ' + (\"production\") + '. This is not a problem if you define your environment variables outside of the file system as you should.');\n\t}\n\t\n\t/* If any of the environment variables(process.env.REDIS_URL) don't exist,\n\t *   the process exits with code 400.\n\t * https://github.com/bjoshuanoah/require-environment-variables\n\t */\n\t(0, _requireEnvironmentVariables2.default)(['REDIS_URL', 'DATABASE_URL', 'MAIN_SERVER_PORT', 'ACCOUNT_PEPPER_1', 'ACCOUNT_ENCRYPT_CURRENT_PEPPER', 'IDIER_WORKER_ID', 'TOKEN_PEPPER_1', 'TOKEN_ENCRYPT_CURRENT_PEPPER', 'SESSION_SECRET']);\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"dotenv\");\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"require-environment-variables\");\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t var uuid = __webpack_require__(11),\n\t     aws = __webpack_require__(13),\n\t     express = __webpack_require__(3);\n\t\n\t\n\tfunction checkTrailingSlash(path) {\n\t    if (path && path[path.length-1] != '/') {\n\t        path += '/';\n\t    }\n\t    return path;\n\t}\n\t\n\tfunction S3Router(options) {\n\t\n\t    var S3_BUCKET = options.bucket,\n\t        getFileKeyDir = options.getFileKeyDir || function() { return \"\"; };\n\t\n\t    if (!S3_BUCKET) {\n\t        throw new Error(\"S3_BUCKET is required.\");\n\t    }\n\t\n\t    var s3Options = {};\n\t    if (options.region) {\n\t      s3Options.region = options.region;\n\t    }\n\t    if (options.signatureVersion) {\n\t        s3Options.signatureVersion = options.signatureVersion;\n\t    }\n\t\n\t    var router = express.Router();\n\t\n\t    /**\n\t     * Redirects image requests with a temporary signed URL, giving access\n\t     * to GET an upload.\n\t     */\n\t    function tempRedirect(req, res) {\n\t        var params = {\n\t            Bucket: S3_BUCKET,\n\t            Key: checkTrailingSlash(getFileKeyDir(req)) + req.params[0]\n\t        };\n\t        var s3 = new aws.S3(s3Options);\n\t        s3.getSignedUrl('getObject', params, function(err, url) {\n\t            res.redirect(url);\n\t        });\n\t    };\n\t\n\t    /**\n\t     * Image specific route.\n\t     */\n\t    router.get(/\\/img\\/(.*)/, function(req, res) {\n\t        return tempRedirect(req, res);\n\t    });\n\t\n\t    /**\n\t     * Other file type(s) route.\n\t     */\n\t    router.get(/\\/uploads\\/(.*)/, function(req, res) {\n\t        return tempRedirect(req, res);\n\t    });\n\t\n\t    /**\n\t     * Returns an object with `signedUrl` and `publicUrl` properties that\n\t     * give temporary access to PUT an object in an S3 bucket.\n\t     */\n\t    router.get('/sign', function(req, res) {\n\t        var filename = uuid.v4() + \"_\" + req.query.objectName;\n\t        var mimeType = req.query.contentType;\n\t        var fileKey = checkTrailingSlash(getFileKeyDir(req)) + filename;\n\t        // Set any custom headers\n\t        if (options.headers) {\n\t          res.set(options.headers);\n\t        }\n\t\n\t        var s3 = new aws.S3(s3Options);\n\t        var params = {\n\t            Bucket: S3_BUCKET,\n\t            Key: fileKey,\n\t            Expires: 60,\n\t            ContentType: mimeType,\n\t            ACL: options.ACL || 'private'\n\t        };\n\t        s3.getSignedUrl('putObject', params, function(err, data) {\n\t            if (err) {\n\t                console.log(err);\n\t                return res.send(500, \"Cannot create S3 signed URL\");\n\t            }\n\t            res.json({\n\t                signedUrl: data,\n\t                publicUrl: '/s3/uploads/' + filename,\n\t                filename: filename\n\t            });\n\t        });\n\t    });\n\t\n\t    return router;\n\t}\n\t\n\tmodule.exports = S3Router;\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;//     uuid.js\n\t//\n\t//     Copyright (c) 2010-2012 Robert Kieffer\n\t//     MIT License - http://opensource.org/licenses/mit-license.php\n\t\n\t/*global window, require, define */\n\t(function(_window) {\n\t  'use strict';\n\t\n\t  // Unique ID creation requires a high quality random # generator.  We feature\n\t  // detect to determine the best RNG source, normalizing to a function that\n\t  // returns 128-bits of randomness, since that's what's usually required\n\t  var _rng, _mathRNG, _nodeRNG, _whatwgRNG, _previousRoot;\n\t\n\t  function setupBrowser() {\n\t    // Allow for MSIE11 msCrypto\n\t    var _crypto = _window.crypto || _window.msCrypto;\n\t\n\t    if (!_rng && _crypto && _crypto.getRandomValues) {\n\t      // WHATWG crypto-based RNG - http://wiki.whatwg.org/wiki/Crypto\n\t      //\n\t      // Moderately fast, high quality\n\t      try {\n\t        var _rnds8 = new Uint8Array(16);\n\t        _whatwgRNG = _rng = function whatwgRNG() {\n\t          _crypto.getRandomValues(_rnds8);\n\t          return _rnds8;\n\t        };\n\t        _rng();\n\t      } catch(e) {}\n\t    }\n\t\n\t    if (!_rng) {\n\t      // Math.random()-based (RNG)\n\t      //\n\t      // If all else fails, use Math.random().  It's fast, but is of unspecified\n\t      // quality.\n\t      var  _rnds = new Array(16);\n\t      _mathRNG = _rng = function() {\n\t        for (var i = 0, r; i < 16; i++) {\n\t          if ((i & 0x03) === 0) { r = Math.random() * 0x100000000; }\n\t          _rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n\t        }\n\t\n\t        return _rnds;\n\t      };\n\t      if ('undefined' !== typeof console && console.warn) {\n\t        console.warn(\"[SECURITY] node-uuid: crypto not usable, falling back to insecure Math.random()\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function setupNode() {\n\t    // Node.js crypto-based RNG - http://nodejs.org/docs/v0.6.2/api/crypto.html\n\t    //\n\t    // Moderately fast, high quality\n\t    if (true) {\n\t      try {\n\t        var _rb = __webpack_require__(12).randomBytes;\n\t        _nodeRNG = _rng = _rb && function() {return _rb(16);};\n\t        _rng();\n\t      } catch(e) {}\n\t    }\n\t  }\n\t\n\t  if (_window) {\n\t    setupBrowser();\n\t  } else {\n\t    setupNode();\n\t  }\n\t\n\t  // Buffer class to use\n\t  var BufferClass = ('function' === typeof Buffer) ? Buffer : Array;\n\t\n\t  // Maps for number <-> hex string conversion\n\t  var _byteToHex = [];\n\t  var _hexToByte = {};\n\t  for (var i = 0; i < 256; i++) {\n\t    _byteToHex[i] = (i + 0x100).toString(16).substr(1);\n\t    _hexToByte[_byteToHex[i]] = i;\n\t  }\n\t\n\t  // **`parse()` - Parse a UUID into it's component bytes**\n\t  function parse(s, buf, offset) {\n\t    var i = (buf && offset) || 0, ii = 0;\n\t\n\t    buf = buf || [];\n\t    s.toLowerCase().replace(/[0-9a-f]{2}/g, function(oct) {\n\t      if (ii < 16) { // Don't overflow!\n\t        buf[i + ii++] = _hexToByte[oct];\n\t      }\n\t    });\n\t\n\t    // Zero out remaining bytes if string was short\n\t    while (ii < 16) {\n\t      buf[i + ii++] = 0;\n\t    }\n\t\n\t    return buf;\n\t  }\n\t\n\t  // **`unparse()` - Convert UUID byte array (ala parse()) into a string**\n\t  function unparse(buf, offset) {\n\t    var i = offset || 0, bth = _byteToHex;\n\t    return  bth[buf[i++]] + bth[buf[i++]] +\n\t            bth[buf[i++]] + bth[buf[i++]] + '-' +\n\t            bth[buf[i++]] + bth[buf[i++]] + '-' +\n\t            bth[buf[i++]] + bth[buf[i++]] + '-' +\n\t            bth[buf[i++]] + bth[buf[i++]] + '-' +\n\t            bth[buf[i++]] + bth[buf[i++]] +\n\t            bth[buf[i++]] + bth[buf[i++]] +\n\t            bth[buf[i++]] + bth[buf[i++]];\n\t  }\n\t\n\t  // **`v1()` - Generate time-based UUID**\n\t  //\n\t  // Inspired by https://github.com/LiosK/UUID.js\n\t  // and http://docs.python.org/library/uuid.html\n\t\n\t  // random #'s we need to init node and clockseq\n\t  var _seedBytes = _rng();\n\t\n\t  // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n\t  var _nodeId = [\n\t    _seedBytes[0] | 0x01,\n\t    _seedBytes[1], _seedBytes[2], _seedBytes[3], _seedBytes[4], _seedBytes[5]\n\t  ];\n\t\n\t  // Per 4.2.2, randomize (14 bit) clockseq\n\t  var _clockseq = (_seedBytes[6] << 8 | _seedBytes[7]) & 0x3fff;\n\t\n\t  // Previous uuid creation time\n\t  var _lastMSecs = 0, _lastNSecs = 0;\n\t\n\t  // See https://github.com/broofa/node-uuid for API details\n\t  function v1(options, buf, offset) {\n\t    var i = buf && offset || 0;\n\t    var b = buf || [];\n\t\n\t    options = options || {};\n\t\n\t    var clockseq = (options.clockseq != null) ? options.clockseq : _clockseq;\n\t\n\t    // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n\t    // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n\t    // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n\t    // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\t    var msecs = (options.msecs != null) ? options.msecs : new Date().getTime();\n\t\n\t    // Per 4.2.1.2, use count of uuid's generated during the current clock\n\t    // cycle to simulate higher resolution clock\n\t    var nsecs = (options.nsecs != null) ? options.nsecs : _lastNSecs + 1;\n\t\n\t    // Time since last uuid creation (in msecs)\n\t    var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\t\n\t    // Per 4.2.1.2, Bump clockseq on clock regression\n\t    if (dt < 0 && options.clockseq == null) {\n\t      clockseq = clockseq + 1 & 0x3fff;\n\t    }\n\t\n\t    // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n\t    // time interval\n\t    if ((dt < 0 || msecs > _lastMSecs) && options.nsecs == null) {\n\t      nsecs = 0;\n\t    }\n\t\n\t    // Per 4.2.1.2 Throw error if too many uuids are requested\n\t    if (nsecs >= 10000) {\n\t      throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n\t    }\n\t\n\t    _lastMSecs = msecs;\n\t    _lastNSecs = nsecs;\n\t    _clockseq = clockseq;\n\t\n\t    // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\t    msecs += 12219292800000;\n\t\n\t    // `time_low`\n\t    var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n\t    b[i++] = tl >>> 24 & 0xff;\n\t    b[i++] = tl >>> 16 & 0xff;\n\t    b[i++] = tl >>> 8 & 0xff;\n\t    b[i++] = tl & 0xff;\n\t\n\t    // `time_mid`\n\t    var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n\t    b[i++] = tmh >>> 8 & 0xff;\n\t    b[i++] = tmh & 0xff;\n\t\n\t    // `time_high_and_version`\n\t    b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\t    b[i++] = tmh >>> 16 & 0xff;\n\t\n\t    // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\t    b[i++] = clockseq >>> 8 | 0x80;\n\t\n\t    // `clock_seq_low`\n\t    b[i++] = clockseq & 0xff;\n\t\n\t    // `node`\n\t    var node = options.node || _nodeId;\n\t    for (var n = 0; n < 6; n++) {\n\t      b[i + n] = node[n];\n\t    }\n\t\n\t    return buf ? buf : unparse(b);\n\t  }\n\t\n\t  // **`v4()` - Generate random UUID**\n\t\n\t  // See https://github.com/broofa/node-uuid for API details\n\t  function v4(options, buf, offset) {\n\t    // Deprecated - 'format' argument, as supported in v1.2\n\t    var i = buf && offset || 0;\n\t\n\t    if (typeof(options) === 'string') {\n\t      buf = (options === 'binary') ? new BufferClass(16) : null;\n\t      options = null;\n\t    }\n\t    options = options || {};\n\t\n\t    var rnds = options.random || (options.rng || _rng)();\n\t\n\t    // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\t    rnds[6] = (rnds[6] & 0x0f) | 0x40;\n\t    rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\t\n\t    // Copy bytes to buffer, if provided\n\t    if (buf) {\n\t      for (var ii = 0; ii < 16; ii++) {\n\t        buf[i + ii] = rnds[ii];\n\t      }\n\t    }\n\t\n\t    return buf || unparse(rnds);\n\t  }\n\t\n\t  // Export public API\n\t  var uuid = v4;\n\t  uuid.v1 = v1;\n\t  uuid.v4 = v4;\n\t  uuid.parse = parse;\n\t  uuid.unparse = unparse;\n\t  uuid.BufferClass = BufferClass;\n\t  uuid._rng = _rng;\n\t  uuid._mathRNG = _mathRNG;\n\t  uuid._nodeRNG = _nodeRNG;\n\t  uuid._whatwgRNG = _whatwgRNG;\n\t\n\t  if (('undefined' !== typeof module) && module.exports) {\n\t    // Publish as node.js module\n\t    module.exports = uuid;\n\t  } else if (true) {\n\t    // Publish as AMD module\n\t    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {return uuid;}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t\n\t  } else {\n\t    // Publish as global (in browsers)\n\t    _previousRoot = _window.uuid;\n\t\n\t    // **`noConflict()` - (browser only) to reset global 'uuid' var**\n\t    uuid.noConflict = function() {\n\t      _window.uuid = _previousRoot;\n\t      return uuid;\n\t    };\n\t\n\t    _window.uuid = uuid;\n\t  }\n\t})('undefined' !== typeof window ? window : null);\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"crypto\");\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"aws-sdk\");\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// server.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a7d8489fbfa8dd63f6c5","/* Core imports */\nimport http from 'http';\nimport httpProxy from 'http-proxy';\nimport express from 'express';\nimport helmet from 'helmet';\nimport morgan from 'morgan';\nimport favicon from 'serve-favicon';\n\n// import React from 'react';\n// import { renderToString } from 'react-dom/server';\n// import { RoutingContext, match } from 'react-router';\n/* Routes */\n// import routes from '../shared/routes';\n/* Configurations */\n\nimport '../config/environment';\n\n/* Set up proxy routes to the api server */\nlet apiServerPort = process.env.API_SERVER_PORT;\nif (!apiServerPort) {\n  apiServerPort = 3006;\n}\nconst apiProxy = httpProxy.createProxyServer();\nconst apiServer = `http://localhost:${apiServerPort}`;\n\nlet ourPort = process.env.MAIN_SERVER_PORT;\nif (!ourPort) {\n  ourPort = 3001;\n}\n\nconst app = express();\n\napp.use(favicon('build/public/assets/favicon.ico'));\n\n/* Configure middleware */\n/* Helmet - help secure Express/Connect apps with various HTTP headers */\napp.use(helmet());\napp.use(morgan('combined'));\n\n/* if (process.env.NODE_ENV && process.env.NODE_ENV === 'production') {\n  app.get('*.js', (req, res, next) => {\n    req.url = `${req.url}.gz`; // eslint-disable-line no-param-reassign\n    res.set('Content-Encoding', 'gzip');\n    next();\n  });\n}\n*/\napp.use(express.static('build/public'));\n\n/* Proxy all api calls through to the api server */\napp.all('/api/*', function allapiTraffic(req, res) {\n  apiProxy.web(req, res, { target: apiServer });\n});\n\napp.use('/s3', require('react-s3-uploader/s3router')({\n  bucket: 'socialnotsocial',\n  headers: { 'Access-Control-Allow-Origin': '*' }, // optional\n}));\n\n/*\napp.use((req, res) => {\n  match({ routes, location: req.url }, (err, redirectLocation, renderProps) => {\n    if (err) {\n      console.error(err);\n      return res.status(500).end('Internal server error');\n    }\n    if (!renderProps) return res.status(404).end('Not found.');\n\n    const InitialComponent = (\n      <RoutingContext {...renderProps} />\n    );\n    const componentHTML = renderToString(InitialComponent);\n    const HTML = `\n    <!DOCTYPE html>\n    <html>\n      <head>\n        <meta charset=\"utf-8\">\n        <title>Isomorphic Redux Demo</title>\n      </head>\n      <body>\n        <div id=\"react-view\">${componentHTML}</div>\n        <script type=\"application/javascript\" src=\"/bundle.js\"></script>\n      </body>\n  </html>\n`;\n    res.end(HTML);\n  });\n});\n*/\n\nconst server = http.createServer(app);\nconst port = process.env.PORT || ourPort;\nserver.listen(port);\nserver.on('listening', function reportOnListen(error) {\n  if (error) {\n    console.log(`Main Server ERROR on startup: ${error}`);\n  } else {\n    console.log(`Main Server listening on http://localhost:${port}.`);\n  }\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/server.jsx","module.exports = require(\"http\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"http\"\n// module id = 1\n// module chunks = 0","module.exports = require(\"http-proxy\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"http-proxy\"\n// module id = 2\n// module chunks = 0","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 3\n// module chunks = 0","module.exports = require(\"helmet\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"helmet\"\n// module id = 4\n// module chunks = 0","module.exports = require(\"morgan\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"morgan\"\n// module id = 5\n// module chunks = 0","module.exports = require(\"serve-favicon\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"serve-favicon\"\n// module id = 6\n// module chunks = 0","import dotenv from 'dotenv';\nimport requireEnv from 'require-environment-variables';\n\n/* 'As early as possible in your application, require and configure dotenv.'\n *   - https://www.npmjs.com/package/dotenv\n *\n * However, we aren't going to load these in production as it could lead to sloppy deploys.\n */\nif (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\n  console.log(`Environment: ${process.env.NODE_ENV} - loading DEV environment vars.`);\n  dotenv.load();\n} else if (process.env.NODE_ENV && process.env.NODE_ENV === 'test') {\n  console.log('Environment: loading TEST environment vars.');\n  dotenv.load({ path: './envTest' });\n} else {\n  console.log(`Environment: did NOT load environment variables from .env for ${process.env.NODE_ENV}. This is not a problem if you define your environment variables outside of the file system as you should.`);\n}\n\n/* If any of the environment variables(process.env.REDIS_URL) don't exist,\n *   the process exits with code 400.\n * https://github.com/bjoshuanoah/require-environment-variables\n */\nrequireEnv([\n  'REDIS_URL',\n  'DATABASE_URL',\n  'MAIN_SERVER_PORT',\n  'ACCOUNT_PEPPER_1',\n  'ACCOUNT_ENCRYPT_CURRENT_PEPPER',\n  'IDIER_WORKER_ID',\n  'TOKEN_PEPPER_1',\n  'TOKEN_ENCRYPT_CURRENT_PEPPER',\n  'SESSION_SECRET',\n]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/config/environment.js","module.exports = require(\"dotenv\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"dotenv\"\n// module id = 8\n// module chunks = 0","module.exports = require(\"require-environment-variables\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"require-environment-variables\"\n// module id = 9\n// module chunks = 0","\n var uuid = require('node-uuid'),\n     aws = require('aws-sdk'),\n     express = require('express');\n\n\nfunction checkTrailingSlash(path) {\n    if (path && path[path.length-1] != '/') {\n        path += '/';\n    }\n    return path;\n}\n\nfunction S3Router(options) {\n\n    var S3_BUCKET = options.bucket,\n        getFileKeyDir = options.getFileKeyDir || function() { return \"\"; };\n\n    if (!S3_BUCKET) {\n        throw new Error(\"S3_BUCKET is required.\");\n    }\n\n    var s3Options = {};\n    if (options.region) {\n      s3Options.region = options.region;\n    }\n    if (options.signatureVersion) {\n        s3Options.signatureVersion = options.signatureVersion;\n    }\n\n    var router = express.Router();\n\n    /**\n     * Redirects image requests with a temporary signed URL, giving access\n     * to GET an upload.\n     */\n    function tempRedirect(req, res) {\n        var params = {\n            Bucket: S3_BUCKET,\n            Key: checkTrailingSlash(getFileKeyDir(req)) + req.params[0]\n        };\n        var s3 = new aws.S3(s3Options);\n        s3.getSignedUrl('getObject', params, function(err, url) {\n            res.redirect(url);\n        });\n    };\n\n    /**\n     * Image specific route.\n     */\n    router.get(/\\/img\\/(.*)/, function(req, res) {\n        return tempRedirect(req, res);\n    });\n\n    /**\n     * Other file type(s) route.\n     */\n    router.get(/\\/uploads\\/(.*)/, function(req, res) {\n        return tempRedirect(req, res);\n    });\n\n    /**\n     * Returns an object with `signedUrl` and `publicUrl` properties that\n     * give temporary access to PUT an object in an S3 bucket.\n     */\n    router.get('/sign', function(req, res) {\n        var filename = uuid.v4() + \"_\" + req.query.objectName;\n        var mimeType = req.query.contentType;\n        var fileKey = checkTrailingSlash(getFileKeyDir(req)) + filename;\n        // Set any custom headers\n        if (options.headers) {\n          res.set(options.headers);\n        }\n\n        var s3 = new aws.S3(s3Options);\n        var params = {\n            Bucket: S3_BUCKET,\n            Key: fileKey,\n            Expires: 60,\n            ContentType: mimeType,\n            ACL: options.ACL || 'private'\n        };\n        s3.getSignedUrl('putObject', params, function(err, data) {\n            if (err) {\n                console.log(err);\n                return res.send(500, \"Cannot create S3 signed URL\");\n            }\n            res.json({\n                signedUrl: data,\n                publicUrl: '/s3/uploads/' + filename,\n                filename: filename\n            });\n        });\n    });\n\n    return router;\n}\n\nmodule.exports = S3Router;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-s3-uploader/s3router.js\n// module id = 10\n// module chunks = 0","//     uuid.js\n//\n//     Copyright (c) 2010-2012 Robert Kieffer\n//     MIT License - http://opensource.org/licenses/mit-license.php\n\n/*global window, require, define */\n(function(_window) {\n  'use strict';\n\n  // Unique ID creation requires a high quality random # generator.  We feature\n  // detect to determine the best RNG source, normalizing to a function that\n  // returns 128-bits of randomness, since that's what's usually required\n  var _rng, _mathRNG, _nodeRNG, _whatwgRNG, _previousRoot;\n\n  function setupBrowser() {\n    // Allow for MSIE11 msCrypto\n    var _crypto = _window.crypto || _window.msCrypto;\n\n    if (!_rng && _crypto && _crypto.getRandomValues) {\n      // WHATWG crypto-based RNG - http://wiki.whatwg.org/wiki/Crypto\n      //\n      // Moderately fast, high quality\n      try {\n        var _rnds8 = new Uint8Array(16);\n        _whatwgRNG = _rng = function whatwgRNG() {\n          _crypto.getRandomValues(_rnds8);\n          return _rnds8;\n        };\n        _rng();\n      } catch(e) {}\n    }\n\n    if (!_rng) {\n      // Math.random()-based (RNG)\n      //\n      // If all else fails, use Math.random().  It's fast, but is of unspecified\n      // quality.\n      var  _rnds = new Array(16);\n      _mathRNG = _rng = function() {\n        for (var i = 0, r; i < 16; i++) {\n          if ((i & 0x03) === 0) { r = Math.random() * 0x100000000; }\n          _rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n        }\n\n        return _rnds;\n      };\n      if ('undefined' !== typeof console && console.warn) {\n        console.warn(\"[SECURITY] node-uuid: crypto not usable, falling back to insecure Math.random()\");\n      }\n    }\n  }\n\n  function setupNode() {\n    // Node.js crypto-based RNG - http://nodejs.org/docs/v0.6.2/api/crypto.html\n    //\n    // Moderately fast, high quality\n    if ('function' === typeof require) {\n      try {\n        var _rb = require('crypto').randomBytes;\n        _nodeRNG = _rng = _rb && function() {return _rb(16);};\n        _rng();\n      } catch(e) {}\n    }\n  }\n\n  if (_window) {\n    setupBrowser();\n  } else {\n    setupNode();\n  }\n\n  // Buffer class to use\n  var BufferClass = ('function' === typeof Buffer) ? Buffer : Array;\n\n  // Maps for number <-> hex string conversion\n  var _byteToHex = [];\n  var _hexToByte = {};\n  for (var i = 0; i < 256; i++) {\n    _byteToHex[i] = (i + 0x100).toString(16).substr(1);\n    _hexToByte[_byteToHex[i]] = i;\n  }\n\n  // **`parse()` - Parse a UUID into it's component bytes**\n  function parse(s, buf, offset) {\n    var i = (buf && offset) || 0, ii = 0;\n\n    buf = buf || [];\n    s.toLowerCase().replace(/[0-9a-f]{2}/g, function(oct) {\n      if (ii < 16) { // Don't overflow!\n        buf[i + ii++] = _hexToByte[oct];\n      }\n    });\n\n    // Zero out remaining bytes if string was short\n    while (ii < 16) {\n      buf[i + ii++] = 0;\n    }\n\n    return buf;\n  }\n\n  // **`unparse()` - Convert UUID byte array (ala parse()) into a string**\n  function unparse(buf, offset) {\n    var i = offset || 0, bth = _byteToHex;\n    return  bth[buf[i++]] + bth[buf[i++]] +\n            bth[buf[i++]] + bth[buf[i++]] + '-' +\n            bth[buf[i++]] + bth[buf[i++]] + '-' +\n            bth[buf[i++]] + bth[buf[i++]] + '-' +\n            bth[buf[i++]] + bth[buf[i++]] + '-' +\n            bth[buf[i++]] + bth[buf[i++]] +\n            bth[buf[i++]] + bth[buf[i++]] +\n            bth[buf[i++]] + bth[buf[i++]];\n  }\n\n  // **`v1()` - Generate time-based UUID**\n  //\n  // Inspired by https://github.com/LiosK/UUID.js\n  // and http://docs.python.org/library/uuid.html\n\n  // random #'s we need to init node and clockseq\n  var _seedBytes = _rng();\n\n  // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n  var _nodeId = [\n    _seedBytes[0] | 0x01,\n    _seedBytes[1], _seedBytes[2], _seedBytes[3], _seedBytes[4], _seedBytes[5]\n  ];\n\n  // Per 4.2.2, randomize (14 bit) clockseq\n  var _clockseq = (_seedBytes[6] << 8 | _seedBytes[7]) & 0x3fff;\n\n  // Previous uuid creation time\n  var _lastMSecs = 0, _lastNSecs = 0;\n\n  // See https://github.com/broofa/node-uuid for API details\n  function v1(options, buf, offset) {\n    var i = buf && offset || 0;\n    var b = buf || [];\n\n    options = options || {};\n\n    var clockseq = (options.clockseq != null) ? options.clockseq : _clockseq;\n\n    // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n    // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n    // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n    // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n    var msecs = (options.msecs != null) ? options.msecs : new Date().getTime();\n\n    // Per 4.2.1.2, use count of uuid's generated during the current clock\n    // cycle to simulate higher resolution clock\n    var nsecs = (options.nsecs != null) ? options.nsecs : _lastNSecs + 1;\n\n    // Time since last uuid creation (in msecs)\n    var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n    // Per 4.2.1.2, Bump clockseq on clock regression\n    if (dt < 0 && options.clockseq == null) {\n      clockseq = clockseq + 1 & 0x3fff;\n    }\n\n    // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n    // time interval\n    if ((dt < 0 || msecs > _lastMSecs) && options.nsecs == null) {\n      nsecs = 0;\n    }\n\n    // Per 4.2.1.2 Throw error if too many uuids are requested\n    if (nsecs >= 10000) {\n      throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n    }\n\n    _lastMSecs = msecs;\n    _lastNSecs = nsecs;\n    _clockseq = clockseq;\n\n    // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n    msecs += 12219292800000;\n\n    // `time_low`\n    var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n    b[i++] = tl >>> 24 & 0xff;\n    b[i++] = tl >>> 16 & 0xff;\n    b[i++] = tl >>> 8 & 0xff;\n    b[i++] = tl & 0xff;\n\n    // `time_mid`\n    var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n    b[i++] = tmh >>> 8 & 0xff;\n    b[i++] = tmh & 0xff;\n\n    // `time_high_and_version`\n    b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n    b[i++] = tmh >>> 16 & 0xff;\n\n    // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n    b[i++] = clockseq >>> 8 | 0x80;\n\n    // `clock_seq_low`\n    b[i++] = clockseq & 0xff;\n\n    // `node`\n    var node = options.node || _nodeId;\n    for (var n = 0; n < 6; n++) {\n      b[i + n] = node[n];\n    }\n\n    return buf ? buf : unparse(b);\n  }\n\n  // **`v4()` - Generate random UUID**\n\n  // See https://github.com/broofa/node-uuid for API details\n  function v4(options, buf, offset) {\n    // Deprecated - 'format' argument, as supported in v1.2\n    var i = buf && offset || 0;\n\n    if (typeof(options) === 'string') {\n      buf = (options === 'binary') ? new BufferClass(16) : null;\n      options = null;\n    }\n    options = options || {};\n\n    var rnds = options.random || (options.rng || _rng)();\n\n    // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n    rnds[6] = (rnds[6] & 0x0f) | 0x40;\n    rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n    // Copy bytes to buffer, if provided\n    if (buf) {\n      for (var ii = 0; ii < 16; ii++) {\n        buf[i + ii] = rnds[ii];\n      }\n    }\n\n    return buf || unparse(rnds);\n  }\n\n  // Export public API\n  var uuid = v4;\n  uuid.v1 = v1;\n  uuid.v4 = v4;\n  uuid.parse = parse;\n  uuid.unparse = unparse;\n  uuid.BufferClass = BufferClass;\n  uuid._rng = _rng;\n  uuid._mathRNG = _mathRNG;\n  uuid._nodeRNG = _nodeRNG;\n  uuid._whatwgRNG = _whatwgRNG;\n\n  if (('undefined' !== typeof module) && module.exports) {\n    // Publish as node.js module\n    module.exports = uuid;\n  } else if (typeof define === 'function' && define.amd) {\n    // Publish as AMD module\n    define(function() {return uuid;});\n\n\n  } else {\n    // Publish as global (in browsers)\n    _previousRoot = _window.uuid;\n\n    // **`noConflict()` - (browser only) to reset global 'uuid' var**\n    uuid.noConflict = function() {\n      _window.uuid = _previousRoot;\n      return uuid;\n    };\n\n    _window.uuid = uuid;\n  }\n})('undefined' !== typeof window ? window : null);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-s3-uploader/~/node-uuid/uuid.js\n// module id = 11\n// module chunks = 0","module.exports = require(\"crypto\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"crypto\"\n// module id = 12\n// module chunks = 0","module.exports = require(\"aws-sdk\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"aws-sdk\"\n// module id = 13\n// module chunks = 0"],"sourceRoot":""}